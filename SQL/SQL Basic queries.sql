create database sql_case_study
create table customer
( 
 Cust_id int not null Primary Key,
 DOB DATE NOT NULL,
 GENDER VARCHAR(1) NOT NULL, 
 CITY_CODE INT NULL
)

create table PRODUCT
( 
 PROD_CAT_CODE INT NOT NULL,
 PROD_CAT VARCHAR(25) NOT NULL,
 PROD_SUB_CAT_CODE INT NOT NULL,
 PROD_SUB_CAT VARCHAR (25) NOT NULL
)

select * from customer

INSERT INTO PRODUCT VALUES
( 
 1,'Clothing',4,'Mens'),
(1,'Clothing',1,'Women'),
(1,'Clothing',3,'Kids'),
(2,'Footwear',1,'Mens'),
(2,'Footwear',3,'Women'),
(2,'Footwear',4,'Kids'),
(3,'Electronics',4,'Mobiles'),
(3,'Electronics',5,'Computers'),
(3,'Electronics',8,'Personal Appliances'),
(3,'Electronics',9,'Cameras'),
(3,'Electronics',10,'Audio and video'),
(4,'Bags',1,'Mens'),
(4,'Bags',4,'Women'),
(5,'Books',7,'Fiction'),
(5,'Books',12,'Academic'),
(5,'Books',10,'Non-Fiction'),
(5,'Books',11,'Children'),
(5,'Books',3,'Comics'),
(5,'Books',6,'DIY'),
(6,'Home and kitchen',2,'Furnishing'),
(6,'Home and kitchen',10,'Kitchen'),
(6,'Home and kitchen',11,'Bath'),
(6,'Home and kitchen',12,'Tools'
)

create table TRANSACTIONS
( 
 TRANS_ID BIGINT NOT NULL,
 CUST_ID INT NOT NULL FOREIGN KEY (CUST_ID) REFERENCES CUSTOMER,
 TRANS_DATE DATE NOT NULL, 
 PROD_SUB_CAT_CODE INT NOT NULL,
 PROD_CAT_CODE INT NOT NULL,
 QTY INT NOT NULL,
 RATE INT NOT NULL,
 TAX decimal NOT NULL,
 TOTAL decimal NOT NULL,
 STORE_TYPE VARCHAR(20) NOT NULL,
 ) 


 SELECT TRANS_DATE FROM  TRANSACTIONS ORDER BY TRANS_DATE ASC
 ==============================================================================================================================================
 SELECT * FROM transactions left JOIN customer ON TRANSACTIONS.CUST_ID=CUSTOMER.CUST_ID
                            INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE and transactions.prod_cat_code=product.prod_cat_code

===================================================================================================================================================
--Q1. What is the total number of rows in each of the 3 tables in the database?

select count (*) from CUSTOMER INNER JOIN TRANSACTIONS ON CUSTOMER.CUST_ID=TRANSACTIONS.CUST_ID
                        INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE;
=====================================================================================================================================================
--Q2. What is the total number of transaction that have a return?
 
 SELECT COUNT (*) FROM TRANSACTIONS
WHERE QTY<0
=========================================================================================

--Q4.WHAT IS THE TIME RANGE OF THE TRANSACTION DATA AVAILABLE FOR ANALYSIS? SHOW THE OUTPUT IN NUMBER OF DAYS, MONTHS AND YEARS SIMULTANEOUSLY IN DIFFERENT COLUMNS.

SELECT 
DATEDIFF(DAY,'02/01/2011','02/12/2014') AS'NO. OF DAYS',
DATEDIFF(MONTH,'02/01/2011','02/12/2014') AS'NO. OF MONTH',
DATEDIFF(YEAR,'02/01/2011','02/12/2014') AS'NO. OF YEARS';


--Q5. Which product category does the subcategory "DIY" belongs to WHICH CATEGORY?

SELECT * FROM PRODUCT WHERE PROD_SUB_CAT='DIY'

===============================================================================

--Q1. WHICH CHANNEL IS MOST FREQUENTLY USED FOR TRANSACTIONS?

SELECT TOP 1 store_type, count(*) as channel_frequently_used
from transactions group by store_type
order by store_type asc

--Q2. WHAT IS THE COUNT OF MALES AND FEMALES IN THE DATABASE?

SELECT 
GENDER,
COUNT(GENDER)
FROM CUSTOMER
WHERE GENDER IN ('M', 'F')
GROUP BY GENDER


--Q3. FROM WHICH CITY DO WE HAVE THE MAXIMUM NUMBER OF CUSTOMERS AND HOW MANY?

SELECT TOP 1 CITY_CODE,
COUNT(cust_id)[COUNT OF CUSTOMER]
FROM CUSTOMER
GROUP BY city_code
ORDER BY [COUNT OF CUSTOMER] DESC


--Q4. How many sub-categories under the books category?

SELECT 
PROD_CAT,
COUNT(PROD_SUB_CAT) [count of subcategory]
FROM PRODUCT
WHERE PROD_CAT='BOOKS'
GROUP BY PROD_CAT

--Q5. WHAT IS THE MAXIMUM QUANTITY OF PRODUCTS EVER ORDERED?

SELECT  TOP 1
PROD_CAT,
COUNT(PROD_CAT) [no. ORDERED ITEMS]
FROM CUSTOMER INNER JOIN TRANSACTIONS ON CUSTOMER.CUST_ID=TRANSACTIONS.CUST_ID
                        INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE and transactions.prod_cat_code=product.prod_cat_code
WHERE QTY>0
GROUP BY PROD_CAT ORDER BY COUNT(PROD_CAT) DESC

--Q6. WHAT IS THE NET TOTAL REVENUE GENERATED IN CATEGORIES ELECTRONICS AND BOOKS?

SELECT PROD_CAT,
SUM(TOTAL) [TOTAL REVENUES]
FROM CUSTOMER INNER JOIN TRANSACTIONS ON CUSTOMER.CUST_ID=TRANSACTIONS.CUST_ID
                        INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE  and transactions.prod_cat_code=product.prod_cat_code
GROUP BY PROD_CAT
having PROD_CAT IN ('BOOKS', 'ELECTRONICS')

--Q7. how many customers have >10 transaction, excluding returns

SELECT * FROM (SELECT CUSTOMER.CUST_ID, QTY,
		 COUNT(CUSTOMER.CUST_ID) [TRANSACTIONS]
		 FROM CUSTOMER INNER JOIN TRANSACTIONS ON CUSTOMER.CUST_ID=TRANSACTIONS.CUST_ID
                       INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE
		GROUP BY CUSTOMER.CUST_ID, QTY
		HAVING COUNT(CUSTOMER.CUST_ID)>10 AND QTY>0) ABCD ORDER BY [TRANSACTIONS] DESC


--Q8. WHAT IS THE TOTAL REVENUE GENERATED BY FROM "ELECTRONOCS" & "CLOTHING" CATEGORIES, FROM "FLAGSHIP STORE"?

SELECT
STORE_TYPE,PROD_CAT,
SUM(TOTAL) [TOTAL REVENUES]
FROM CUSTOMER INNER JOIN TRANSACTIONS ON CUSTOMER.CUST_ID=TRANSACTIONS.CUST_ID
                        INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE and transactions.prod_cat_code=product.prod_cat_code
GROUP BY STORE_TYPE, PROD_CAT
having PROD_CAT IN ('ELECTRONICS', 'CLOTHING') AND STORE_TYPE IN ('FLAGSHIP STORE')

--Q9. WHAT IS THE TOTAL REVENUE GENERATED BY MALE IN THE CATEGORY ELECTRONICS

SELECT
PROD_CAT,PROD_SUB_CAT,
SUM(TOTAL) [TOTAL REVENUES]
FROM TRANSACTIONS INNER JOIN CUSTOMER ON TRANSACTIONS.CUST_ID=CUSTOMER.CUST_ID
                        INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE and transactions.prod_cat_code=product.prod_cat_code
GROUP BY PROD_CAT, PROD_SUB_CAT, GENDER
HAVING GENDER IN ('M') AND PROD_CAT IN ('ELECTRONICS') ORDER BY PROD_SUB_CAT DESC

--Q10. WHAT IS PERCENTAGE OF SALES AND RETURNS BY PRODUCT SUB CATEGORY; DISPLAY ONLY TOP 5 SUB CATEGORIES IN TERMS OF SALES?

SELECT 
SUM(CASE WHEN TOTAL>0 THEN TOTAL END)/
(SELECT  TOP 5
PROD_CAT,
SUM(TOTAL) [SALES]
FROM CUSTOMER INNER JOIN TRANSACTIONS ON CUSTOMER.CUST_ID=TRANSACTIONS.CUST_ID
                        INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE and transactions.prod_cat_code=product.prod_cat_code GROUP BY PROD_CAT) AS SALES_AMT,
SUM(CASE WHEN TOTAL<0 THEN TOTAL END)/
(SELECT  TOP 5
PROD_CAT,
SUM(TOTAL) [SALES]
FROM CUSTOMER INNER JOIN TRANSACTIONS ON CUSTOMER.CUST_ID=TRANSACTIONS.CUST_ID
                        INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE and transactions.prod_cat_code=product.prod_cat_code GROUP BY PROD_CAT) AS SALES_AMT
FROM CUSTOMER INNER JOIN TRANSACTIONS ON CUSTOMER.CUST_ID=TRANSACTIONS.CUST_ID
                        INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE and transactions.prod_cat_code=product.prod_cat_code

GROUP BY PROD_CAT 
--Q11. FOR ALL THE CUSTOMERS AGED BETWEEN 25 TO 35 YEARS FIND WHAT IS THE NET TOTAL REVENUE GENERATED BY THESE CONSUMERS IN LAST 30 DAYS OF TRANSACTIONS FROM MAX TRANSACTION DATE AVAILABLE IN DATA?

SELECT * FROM 
(SELECT CUSTOMER.CUST_ID, DOB,TRANS_DATE,
DATEDIFF(YEAR,DOB,TRANS_DATE) [AGE],
DATEDIFF(DAY,TRANS_DATE,'12/02/2014') [NO. OF DAYS],
SUM(TOTAL) [TOTAL SALE]
FROM CUSTOMER INNER JOIN TRANSACTIONS ON CUSTOMER.CUST_ID=TRANSACTIONS.CUST_ID
               INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE AND TRANSACTIONS.PROD_CAT_CODE=PRODUCT.PROD_CAT_CODE
			   GROUP BY CUSTOMER.CUST_ID, DOB,TRANS_DATE)ABCD
WHERE [AGE]<=35 AND [AGE] >=25 AND [NO. OF DAYS]<=30 AND [TOTAL SALE] >0 ORDER BY [AGE] DESC


--Q12. Which category product has seen the max returns in the last 3 months?

SELECT * FROM (SELECT  
PROD_CAT,TRANS_DATE,
DATEDIFF(MONTH,TRANS_DATE,'12/02/2014') [NO. OF MONTH],
MAX(PROD_CAT) [Max Return],
COUNT(PROD_CAT) [COUNT OF PRODUCT]
FROM CUSTOMER INNER JOIN TRANSACTIONS ON CUSTOMER.CUST_ID=TRANSACTIONS.CUST_ID
                        INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE and transactions.prod_cat_code=product.prod_cat_code
						GROUP BY PROD_CAT,TRANS_DATE)ABCD
						WHERE [NO. OF MONTH]<= 3  ORDER BY [COUNT OF PRODUCT] DESC


--Q13. WHICH STORE TYPE SOLD MAXIMUM PRODUCT; BY VALUE OF SALES AMOUNT AND QUANTITY?

SELECT top 1
STORE_TYPE,
sum(qty) [Sold Quantity],
SUM(TOTAL) [TOTAL SALES]
FROM transactions  INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE AND TRANSACTIONS.PROD_CAT_CODE=PRODUCT.PROD_CAT_CODE
WHERE QTY>0
Group by STORE_TYPE order by SUM(total) DEsc


--Q14. WHAT ARE THE CATEGORIES FOR WHICH THE AVERAGE REVENUE IS ABOVE THE OVERALL AVERAGE?

SELECT PROD_CAT, 
AVG(TOTAL) [AVERAGE]
FROM CUSTOMER INNER JOIN TRANSACTIONS ON CUSTOMER.CUST_ID=TRANSACTIONS.CUST_ID
                        INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE AND TRANSACTIONS.PROD_CAT_CODE=PRODUCT.PROD_CAT_CODE
						GROUP BY PROD_CAT
HAVING AVG(total) > (SELECT AVG(TOTAL)
FROM CUSTOMER INNER JOIN TRANSACTIONS ON CUSTOMER.CUST_ID=TRANSACTIONS.CUST_ID
                        INNER JOIN PRODUCT ON TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE AND TRANSACTIONS.PROD_CAT_CODE=PRODUCT.PROD_CAT_CODE)

--Q15.find the average and total revenue by each subcategory for the categories which are among top 5 categories in terms of quantity sold.

SELECT PROD_SUB_CAT, AVG(TOTAL) [AVERAGE] FROM TRANSACTIONS INNER JOIN PRODUCT ON TRANSACTIONS.PROD_CAT_CODE=PRODUCT.PROD_CAT_CODE AND TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE  
WHERE EXISTS(SELECT TOP 5 PROD_CAT,
SUM(TOTAL) [TOTAL REVENUE]
FROM TRANSACTIONS INNER JOIN PRODUCT ON TRANSACTIONS.PROD_CAT_CODE=PRODUCT.PROD_CAT_CODE AND TRANSACTIONS.PROD_SUB_CAT_CODE=PRODUCT.PROD_SUB_CAT_CODE  
GROUP BY PROD_CAT ORDER BY [TOTAL REVENUE] DESC)
GROUP BY PROD_SUB_CAT ORDER BY [AVERAGE] DESC



						